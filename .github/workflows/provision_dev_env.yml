# This is a basic workflow to help you get started with Actions

name: provision_dev_env

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "test" ]
  pull_request:
    branches: [ "test" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  provision_infrastructure:
    runs-on: ubuntu-latest
    steps:
      - name: Clone repository
        run: |
          git clone https://github.com/Chuc-Thien-DevOps-Final-Project/infrastructure.git
        
      - name: Set up SSH key
        run: |
          ls
          cd infrastructure/terraform-infra/envs/dev
          ls
          echo "${{ secrets.SSH_KEY }}" > tct-ssh-key.pem
          chmod 600 tct-ssh-key.pem
          ls

        
      - name: Install AWS CLI
        run: |
          curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
          unzip awscliv2.zip
          sudo ./aws/install --update
          
      - name: Configure AWS CLI
        run: |
            # aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
            # aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            # aws configure set region us-east-1
            # aws configure list
            mkdir -p ~/.aws
            touch ~/.aws/credentials
            echo "${{ secrets.AWS_KEY }}" > ~/.aws/credentials
            aws sts get-caller-identity
            aws configure set region us-east-1
        
      - name: Install Terraform
        run: |
          sudo snap install terraform --classic
          sudo terraform version
      - name: Initialize Terraform
        run: |
          ls
          cd infrastructure/terraform-infra/envs/dev
          ls
          terraform init
          terraform validate
          terraform plan
          terraform apply -auto-approve
      - name: Update HOST variable
        run: |       
          cd infrastructure/terraform-infra/envs/dev
          export DEV_ENV=$(terraform output -raw ec2_module_public_ip)
          echo $DEV_ENV
          echo $DEV_ENV > host_ip.txt
          export GITHUB_TOKEN=${{ secrets.GIT_TOKEN_KEY }}
          curl -X PATCH \
            -H "Authorization: Bearer $GITHUB_TOKEN" \
            -H "Accept: application/vnd.github+json" \
            https://api.github.com/repos/Chuc-Thien-DevOps-Final-Project/go-coffeshop/actions/variables/DEV_ENV \
            -d '{"name":"DEV_ENV","value":"'"$DEV_ENV"'"}'

      - name: Setup Dev Env
        run: |
          cd infrastructure/terraform-infra/envs/dev
          ls
          export DEV_ENV=$(terraform output -raw ec2_module_public_ip)
          
          ssh -i "tct-ssh-key.pem" -o StrictHostKeyChecking=no ec2-user@$DEV_ENV \
          "DEV_ENV=$DEV_ENV bash -s" << 'EOF'
            echo "DEV_ENV inside remote: $DEV_ENV"
            
            # Cập nhật hệ thống
            sudo yum update -y
            sudo yum install -y git curl unzip --skip-broken
            
            # Cài đặt Docker
            sudo amazon-linux-extras enable docker
            sudo yum install -y docker
            sudo systemctl start docker
            sudo systemctl enable docker
            sudo usermod -aG docker ec2-user
            newgrp docker
      
            # Cài đặt Docker Compose
            sudo curl -L https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m) -o /usr/local/bin/docker-compose
            sudo chmod +x /usr/local/bin/docker-compose
            docker-compose version
      
            # Cài đặt AWS CLI
            curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
            unzip -o awscliv2.zip
            sudo ./aws/install --update
            mkdir -p ~/.aws
            touch ~/.aws/credentials
            echo "${{ secrets.AWS_KEY }}" > ~/.aws/credentials
            aws sts get-caller-identity
            aws configure set region us-east-1
      
            # Đăng nhập vào ECR
            aws ecr get-login-password --region us-east-2 | docker login --username AWS --password-stdin 492804330065.dkr.ecr.us-east-2.amazonaws.com
            
            # Clone project
            git clone https://github.com/Chuc-Thien-DevOps-Final-Project/go-coffeshop.git
            cd go-coffeshop
      
            # Cập nhật docker-compose.yml
            sed -i "s|localhost|$DEV_ENV|g" docker-compose.yml
      
            # Khởi động Docker Compose
            docker-compose up -d
      EOF
          
          

